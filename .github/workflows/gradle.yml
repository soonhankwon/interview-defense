name: Spring Boot & Gradle & Docker & NCLOUD CD

on:
  push:
    branches:
      - master
#   pull_request:
#     branches:
#       - master

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      # JDK version 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      # Gradle Caching
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-   
            
      # main 설정 파일 생성 및 write
      - name: Set application.properties for main
        run: |
          # main 설정 파일 디렉토리로 이동
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.APPLICATION }}" >> ./application.properties
        shell: bash

      - name: Set messages.properties for main
        run: |
          # main 설정 파일 디렉토리로 이동
          cd ./src/main/resources
          touch ./messages.properties
          echo "${{ secrets.MESSAGES }}" >> ./messages.properties
        shell: bash

      # Gradle build
      - name: Build with Gradle
        run: ./gradlew bootJar
      
      - name: EC2 Docker Cleanup
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            # 구동중인 모든 컨테이너 스탑 & 삭제
            sudo docker stop $(sudo docker ps -q --filter "ancestor=${{ secrets.DOCKER_USERNAME }}/interviewdefense")
            sudo docker rm $(sudo docker ps -aq --filter "ancestor=${{ secrets.DOCKER_USERNAME }}/interviewdefense")

            # 도커 이미지 삭제
            sudo docker image rm ${{ secrets.DOCKER_USERNAME }}/five-star

            # 안쓰는 이미지 삭제
            sudo docker image prune -a -f
      
      # Spring 어플리케이션 Docker Image 빌드
      - name: Build Docker Image For Spring
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/interviewdefense .
          docker push ${{ secrets.DOCKER_USERNAME }}/interviewdefense

      # 서버에서 Docker 이미지 실행
      - name: EC2 Docker Run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/interviewdefense
            sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/interviewdefense
            sudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080
